<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="false">
		<property name="locations">
			<list>
				<value>classpath:consumer.properties</value>
			</list>
		</property>
	</bean>

	<bean id="kafkaConfig" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="zookeeper.connect">${kafka.zookeeper.connect}</prop>
				<prop key="group.id">${kafka.group.id}</prop>
				<prop key="zookeeper.session.timeout.ms">${kafka.zookeeper.session.timeout.ms}</prop>
				<prop key="zookeeper.sync.time.ms">${kafka.zookeeper.sync.time.ms}</prop>
				<prop key="auto.commit.interval.ms">${kafka.auto.commit.interval.ms}</prop>
				<prop key="auto.offset.reset">${kafka.auto.offset.reset}</prop>
			</props>
		</property>
	</bean>

<!--	<bean id="consumerKafkaConfig" class="kafka.consumer.ConsumerConfig">
		<constructor-arg index="0" ref="kafkaConfig"/>
	</bean>-->
	<bean id="consumerProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="threadNum">${kafka.consumer.thread.num}</prop>
				<prop key="topic">kafka.topic</prop>
			</props>
		</property>
	</bean>

	<!--此处配置自己的消费者类：应用启动时候，spring会自动去执行Consumer类中定义的消费方法-->
	<!--<bean id="consumerReceive" class="" init-method=""></bean>-->



	</beans>